<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.dao.RoleMapper">


    <!--查询所有用户-->
    <select id="findAllRole" resultType="com.edu.domain.Role">
        SELECT
            id,
            CODE,
            NAME,
            description,
            created_time,
            updated_time,
            created_by,
            updated_by
        FROM roles
        <where>
            <if test="name != null and name != ''">
               and name = #{name}
            </if>
        </where>

    </select>
    
    
    <!--添加角色-->
    <insert id="saveRole" parameterType="com.edu.domain.Role">
        insert into Roles values(null,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>



    <update id="updateRole" parameterType="com.edu.domain.Role" >
        update Roles

        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>

            <if test="name != null and name != ''">
                name = #{name},
            </if>

            <if test="description != null and description != ''">
                description = #{description},
            </if>

            <if test="createdTime != null">
                created_time=#{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>

            <if test="createdBy != null">
                created_by=#{createdBy},
            </if>

            <if test="updatedBy != updatedBy">
                updated_by=#{updatedBy},
            </if>

        </trim>

        <where>
            <if test="id != null and id != '' ">id = #{id}</if>
        </where>
    </update>


    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{id}
    </delete>

    <!--  List<String> findMenuByRoleId(Integer roleId);-->
    <select id="findMenuByRoleId" parameterType="int" resultType="string">
        SELECT m.`id`FROM roles r LEFT JOIN role_menu_relation  rm ON r.id = rm.`role_id`LEFT JOIN menu m ON rm.`menu_id` = m.`id` WHERE r.id = #{id}
    </select>


    <!--删除角色菜单关联信息-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{id}
    </delete>


    <!-- 为角色分配菜单 -->
    <insert id="RoleContextMenu" parameterType="com.edu.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>


    <!-- 获取角色拥有的资源分类数据   -->
    <resultMap id="ResourceCate" type="com.edu.domain.ResourceCategory">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <select id="findRoleHaveResourceCate" parameterType="int" resultMap="ResourceCate">
        SELECT
            rc.id,
            rc.name
        FROM resource_category	rc LEFT JOIN resource r ON rc.id = r.category_id
        LEFT JOIN role_resource_relation rrr ON r.id = rrr.resource_id LEFT JOIN
        roles rs ON rrr.role_id = rs.id WHERE rs.id = #{id} GROUP BY  rc.id;
    </select>

    <!--  获取角色拥有的资源数据  -->
    <select id="findRoleHaveResource" parameterType="int" resultType="com.edu.domain.Resource">
         SELECT
            rc.`id`,
            rc.`name`,
            rc.`category_id`
        FROM roles r  LEFT JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
        LEFT JOIN resource rc ON rrr.`resource_id` = rc.`id` WHERE r.id = #{id};
    </select>

    <!--  删除角色关联的资源数据 -->
    <delete id="deleteRoleContextResource" parameterType="int">
        DELETE FROM role_resource_relation WHERE role_id = #{id};
    </delete>

    <!-- 为角色分配资源   -->
    <insert id="roleContextResource" parameterType="com.edu.domain.RoleResourceRelation">
        INSERT INTO role_resource_relation
        VALUES(NULL,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>
</mapper>