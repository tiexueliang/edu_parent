<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.dao.UserMapper">

    <!-- 用户登陆 -->
    <select id="login" parameterType="com.edu.domain.User" resultType="com.edu.domain.User">
        select * from user where phone = #{phone} and password = #{password}
    </select>


    <!--查询所有用户-->
    <select id="findAllUser" resultType="com.edu.domain.User">
        SELECT
            id,
            NAME,
            portrait,
            phone,
            PASSWORD,
            STATUS,
            create_time
        FROM user
        <where>
            <if test="true">
               and is_del != 1
            </if>
            <if test="username != null">
               and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>

    </select>

    <!--  修改用户状态  -->
    <update id="updateUserStatus">
        UPDATE USER SET STATUS = #{status} where id = #{id};
    </update>

    <!-- 根据ID查询用户当前角色   -->
    <select id="findUserRelationRoleById" resultType="com.edu.domain.Role" parameterType="int">
        SELECT
            r.id,
            r.code,
            r.name,
            r.description
        FROM roles r INNER JOIN user_role_relation ur
        ON r.`id` = ur.`role_id` INNER JOIN user u ON ur.`user_id` = u.`id`
        WHERE u.`id` = #{id}
    </select>

    <!--  根据角色id,查询角色拥有的顶级菜单信息  -->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.edu.domain.Menu">
        SELECT
            m.id,
            m.name,
            m.parent_id,
            m.order_num,
            m.icon,
            m.shown,
            m.level,
            m.href
        FROM roles r INNER JOIN role_menu_relation rm ON r.`id` = rm.role_id
        INNER JOIN menu m ON rm.menu_id = m.id
        WHERE m.parent_id = -1 AND r.id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY m.id;
    </select>


    <!-- 根据PID 查找子菜单 -->
    <select id="findSubMenuByPid" resultType="com.edu.domain.Menu">
        select * from menu where parent_id = #{pid}
    </select>


    <!--  获取用户拥有的资源权限  -->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.edu.domain.Resource">
        SELECT
            rc.`id`,
            rc.`name`,
            rc.`category_id`,
            rc.url,
            rc.category_id,
            rc.description
        FROM roles r  LEFT JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
        LEFT JOIN resource rc ON rrr.`resource_id` = rc.`id` WHERE r.id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY rc.id;
    </select>

    <!-- 根据userid清空中间表关联关系     void deleteUserContextRole(Integer userId);-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from  user_role_relation where user_id = #{userid}
    </delete>

    <!--用户角色关联     void userContextRole(Integer userId, Integer roleid);-->
    <insert id="userContextRole"  parameterType="com.edu.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--  查询用户信息  -->
    <select id="findUserById" parameterType="string" resultType="com.edu.domain.User">
        select * from user where phone = #{phone};
    </select>
</mapper>